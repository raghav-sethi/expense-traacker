{"version":3,"sources":["components/Expenses/ExpensesFilter.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","className","value","selectedYear","onChange","event","onYearSelect","target","Card","classes","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","expenses","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","getMonth","Expenses","useState","setYear","filteredExpenses","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","collapseAddExpense","setCollapseAddExpense","onClick","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","htmlFor","type","min","step","NewExpense","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6e6df583.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const yearSelector = (event) => {\r\n    props.onYearSelect(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selectedYear} onChange={yearSelector}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nexport default function Card(props) {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n","import React from \"react\";\r\nimport \"./ExpenseDate.css\";\r\n\r\nexport default function ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const date = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{date}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"./../UI/Card\";\r\n\r\nexport default function ExpenseItem(props) {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\nexport default function ExpensesList(props) {\r\n  if (props.expenses.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No Expenses Found</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.expenses.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          date={expense.date}\r\n          amount={expense.amount}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nexport default function ChartBar(props) {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nexport default function Chart(props) {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nexport default function ExpensesChart(props) {\r\n  const chartDataPoints = [\r\n    {\r\n      label: \"Jan\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Feb\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Mar\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Apr\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"May\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Jun\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Jul\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Aug\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Sep\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Oct\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Nov\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Dec\",\r\n      value: 0,\r\n    },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport Card from \"./../UI/Card\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nexport default function Expenses(props) {\r\n  const [year, setYear] = useState(\"2020\");\r\n\r\n  const yearSelectHandler = (year) => {\r\n    setYear(year);\r\n  };\r\n\r\n  const filteredExpenses = props.expenses.filter(\r\n    (expense) => expense.date.getFullYear().toString() === year.toString()\r\n  );\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter selectedYear={year} onYearSelect={yearSelectHandler} />\r\n      <ExpensesChart expenses={filteredExpenses} />\r\n      <ExpensesList expenses={filteredExpenses} />\r\n    </Card>\r\n  );\r\n}\r\n\r\n// <ExpenseItem\r\n//   title={props.expenses[0].title}\r\n//   date={props.expenses[0].date}\r\n//   amount={props.expenses[0].amount}\r\n// />\r\n// <ExpenseItem\r\n//   title={props.expenses[1].title}\r\n//   date={props.expenses[1].date}\r\n//   amount={props.expenses[1].amount}\r\n// />\r\n// <ExpenseItem\r\n//   title={props.expenses[2].title}\r\n//   date={props.expenses[2].date}\r\n//   amount={props.expenses[2].amount}\r\n// />\r\n// <ExpenseItem\r\n//   title={props.expenses[3].title}\r\n//   date={props.expenses[3].date}\r\n//   amount={props.expenses[3].amount}\r\n// />\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nexport default function ExpenseForm(props) {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const [collapseAddExpense, setCollapseAddExpense] = useState(true);\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      date: new Date(enteredDate),\r\n      amount: +enteredAmount,\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n\r\n    setCollapseAddExpense(true);\r\n  };\r\n\r\n  const filterPaneCollapseHandler = () => {\r\n    setCollapseAddExpense(true);\r\n  };\r\n  const filterPanePullOutHandler = () => {\r\n    setCollapseAddExpense(false);\r\n  };\r\n\r\n  return collapseAddExpense ? (\r\n    <button onClick={filterPanePullOutHandler}>Add New Expense</button>\r\n  ) : (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"\">Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"\">Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={filterPaneCollapseHandler}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nexport default function NewExpense(props) {\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = { ...enteredExpenseData, id: Math.random().toString() };\r\n    // console.log(expenseData);\r\n    props.onAddExpense(expenseData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}